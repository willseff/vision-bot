# Use Ubuntu as base image for better OpenCV support
FROM ubuntu:20.04

# Avoid interactive prompts during package installation
ENV DEBIAN_FRONTEND=noninteractive

# Set working directory
WORKDIR /app

# Install system dependencies for OpenCV
RUN apt-get update && apt-get install -y \
    python3 \
    python3-pip \
    libglib2.0-0 \
    libsm6 \
    libxext6 \
    libxrender-dev \
    libgomp1 \
    libgl1-mesa-glx \
    libgtk-3-0 \
    libgstreamer1.0-0 \
    libgstreamer-plugins-base1.0-0 \
    wget \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Copy requirements first for better caching
COPY app/requirements.txt .

# Install Python dependencies
RUN pip3 install --no-cache-dir -r requirements.txt

# Create models directory and download EDSR models
RUN mkdir -p models && \
    cd models && \
    wget -q https://github.com/Saafke/EDSR_Tensorflow/raw/master/models/EDSR_x2.pb && \
    wget -q https://github.com/Saafke/EDSR_Tensorflow/raw/master/models/EDSR_x3.pb && \
    wget -q https://github.com/Saafke/EDSR_Tensorflow/raw/master/models/EDSR_x4.pb

# Copy application code
COPY app/ .

# Expose port 8000
EXPOSE 8000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD python3 -c "import requests; requests.get('http://localhost:8000/')" 2>/dev/null || exit 1

# Run the application
CMD ["python3", "-m", "uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000"]